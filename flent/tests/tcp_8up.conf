## -*- mode: python; coding: utf-8 -*-

<<<<<<< HEAD
include("netperf_definitions.inc")
DESCRIPTION="8 upstream TCP streams w/ping"
DEFAULTS={'PLOT': 'totals'}

DATA_SETS = o([
    ('Ping (ms) ICMP',
     {'command': find_ping(IP_VERSION, STEP_SIZE, TOTAL_LENGTH, HOST),
      'units': 'ms',
      'runner': 'ping',}),
    ('TCP upload BE',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
      'delay': DELAY,
      'units': 'Mbits/s',
      'runner': 'netperf_demo',}),
    ('TCP upload BE2',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
      'delay': DELAY,
      'units': 'Mbits/s',
      'runner': 'netperf_demo',}),
    ('TCP upload BE3',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
      'delay': DELAY,
      'units': 'Mbits/s',
      'runner': 'netperf_demo',}),
    ('TCP upload BE4',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
       'delay': DELAY,
       'units': 'Mbits/s',
       'runner': 'netperf_demo',}),
    ('TCP upload BE5',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
       'delay': DELAY,
       'units': 'Mbits/s',
       'runner': 'netperf_demo',}),
    ('TCP upload BE6',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
       'delay': DELAY,
       'units': 'Mbits/s',
       'runner': 'netperf_demo',}),
    ('TCP upload BE7',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
       'delay': DELAY,
       'units': 'Mbits/s',
       'runner': 'netperf_demo',}),
    ('TCP upload BE8',
     {'command': find_netperf("TCP_STREAM", LENGTH, HOST, marking="CS0,CS0"),
       'delay': DELAY,
       'units': 'Mbits/s',
       'runner': 'netperf_demo',}),       
    ('TCP upload avg',
     {'apply_to': [glob("TCP upload*", exclude=["TCP upload sum"])],
       'units': 'Mbits/s',
       'runner': 'average',}),
    ('TCP upload sum',
     {'apply_to': [glob("TCP upload*", exclude=["TCP upload avg"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),
    ('TCP totals',
     {'apply_to': [glob("TCP*", exclude=["TCP download avg", "TCP download sum", "TCP upload avg", "TCP upload sum"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),
        ])

PLOTS = o([

    ('totals',
     {'description': 'Total bandwidth and average ping plot',
      'type': 'timeseries',
      'dual_axes': True,
      'axis_labels': [None, 'Latency (ms)'],
      'series': [{'data': 'TCP upload sum',
                  'label': 'Upload',
                  'smoothing': 10},
                 {'data': 'Ping (ms) ICMP',
                  'label': 'Ping (ms)',
                  'axis': 2}]}),

    ('upload',
     {'description': 'Upload bandwidth plot',
      'type': 'timeseries',
      'legend_title': 'TCP upload',
      'series': [{'data': 'TCP upload BE',
                  'label': 'BE'},
                 {'data': 'TCP upload BE2',
                  'label': 'BE2'},
                 {'data': 'TCP upload BE3',
                  'label': 'BE3'},
                 {'data': 'TCP upload BE4',
                  'label': 'BE4'},
                 {'data': 'TCP upload BE5',
                  'label': 'BE5'},
                 {'data': 'TCP upload BE6',
                  'label': 'BE6'},
                 {'data': 'TCP upload BE7',
                  'label': 'BE7'},
                 {'data': 'TCP upload BE8',
                  'label': 'BE8'},
                 {'data': 'TCP upload avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('upload_scaled',
     {'description': 'Upload bandwidth w/axes scaled to remove outliers',
      'parent': 'upload',
      'scaling': (5,95)}),


    ('ping',
     {'description': 'Ping plot',
      'type': 'timeseries',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'series': [
                 {'data': 'Ping (ms) ICMP',
                  'label': 'Ping (ms)'}]}),
    ('ping_smooth',
     {'description': 'Ping plot (inc smoothed average)',
      'type': 'timeseries',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'series': [
                 {'data': 'Ping (ms) ICMP',
                  'label': 'Ping (ms)'},
                 {'data': 'Ping (ms) ICMP',
                  'label': 'Avg (smoothing)',
                  'smoothing': 5,
                  'color': 'black',
                  'linewidth': 2}]}),
    ('ping_cdf',
     {'description': 'Ping CDF plot',
      'type': 'cdf',
      'axis_labels': ['Latency (ms)'],
      'series': [{'data': 'Ping (ms) ICMP',
                  'label': 'Ping (ms)'},],
      'cutoff': (DELAY,DELAY)}),

    ('box_totals',
     {'description': 'Box plot of totals',
      'parent': 'totals',
      'type': 'box',}),
    ])
=======
TEST_PARAMETERS['upload_streams'] = 8
include("tcp_nup.conf")
DESCRIPTION="TCP upload - 8 streams w/ping"
>>>>>>> refs/remotes/tohojo/master
